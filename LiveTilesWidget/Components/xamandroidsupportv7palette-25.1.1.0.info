{"Name":"Android Support Library V7 Palette","Id":3314,"Alias":"xamandroidsupportv7palette","Description":"# v7 Palette Android Support Library\n\nThe v7 Palette Support Library includes the `Palette` class, which lets you extract prominent colors from an image. For example, a music app could use a Palette object to extract the major colors from an album cover, and use those colors to build a color-coordinated song title card.\n\n\n\n## Android Support Libraries\n\nThe Android Support Libraries are a set of code libraries that provide backward-compatible versions of Android framework APIs as well as features that are only available through the library APIs. Each Support Library is backward-compatible to a specific Android API level. This design means that your applications can use the libraries\u0027 features and still be compatible with devices running older versions of Android.\n\nIncluding the Support Libraries in your Android project is considered a best practice for application developers, depending on the range of platform versions your app is targeting and the APIs that it uses. Using the features the libraries provide can help you improve the look of your application, increase performance and broaden the reach of your application to more users. \n\n\n\n","Version":"25.1.1.0","Summary":"Provide backward-compatible versions of Android framework APIs.","QuickStart":"\nThe Palette Support Library helps extract prominent colors from an image.\n\nA number of colors with different profiles are extracted from the image:\n - Vibrant\n - Vibrant Dark\n - Vibrant Light\n - Muted\n - Muted Dark\n - Muted Light\n\n### Target SDK Version \nNOTE: Using this support library requires that your app have its Target Android Version (*targetSdkVersion*) set to Lollipop (5.0 - API Level 21) or higher, or you will have *aapt* related compile errors.  You can still set the Target Framework which your app is compiled against as low as Android 4.0.3 (API Level 15).\n\n\nExtracting Palette Colors\n-------------------------\n\nYou can extract a palette of colors from a bitmap image using the synchronous or asynchronous methods.\n\n```csharp\n// Synchronous call\nvar palette = Palette.Generate (someBitmap);\n\nvar vibrantColor = palette.GetVibrantColor (defaultVibrantColor);\nvar darkVibrantColor = palette.GetDarkVibrantColor (defaultDarkVibrantColor);\nvar lightVibrantColor = palette.GetLightVibrantColor (defaultLightVibrantColor);\nvar mutedColor = palette.GetMutedColor (defaultMutedColor);\nvar mutedDarkColor = palette.GetDarkMutedColor (defaultDarkMutedColor);\nvar mutedLightColor = palette.GetLightMutedColor (defaultLightMutedColor);\n\nWindow.SetBackgroundDrawable (new ColorDrawable (new Color (vibrantColor)));\n```\n\n```csharp\n// Asynchronous call - second param is an instance of Palette.IPaletteAsyncListener\nPalette.GenerateAsync (someBitmap, this);\n\n// Palette.IPaletteAsyncListener implementation:\npublic void SetPalette (Palette palette)\n{\n\t// Handle the Palette just like the synchronous example above\n}\n```\n\n","Hash":"373e3245db6a56531eaa900301ad4db5","TargetPlatforms":["android"],"TrialHash":null}